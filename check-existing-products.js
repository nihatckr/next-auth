const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient({
  log: ['query', 'info', 'warn', 'error'],
})

async function checkExistingProducts() {
  try {
    console.log('üîç Mevcut √ºr√ºnleri kontrol ediyorum...')

    const products = await prisma.product.findMany({
      select: {
        id: true,
        name: true,
        slug: true,
        productCode: true,
        basePrice: true,
        createdAt: true
      }
    })

    console.log(`üì¶ Toplam ${products.length} √ºr√ºn bulundu:`)

    products.forEach((product, index) => {
      console.log(`\n${index + 1}. √úr√ºn:`)
      console.log(`   - ID: ${product.id}`)
      console.log(`   - Ad: ${product.name}`)
      console.log(`   - Slug: ${product.slug}`)
      console.log(`   - Product Code: ${product.productCode}`)
      console.log(`   - Fiyat: ${product.basePrice}`)
      console.log(`   - Olu≈üturulma: ${product.createdAt}`)
    })

    // Error.md'deki √ºr√ºn ID'lerini kontrol et
    const errorLogIds = [
      '476556327', // CHAMPION ¬Æ X ZARA YAMALI OXFORD G√ñMLEK
      '454736620', // DOKULU OXFORD G√ñMLEK
      '452695835', // PAMUKLU KETEN G√ñMLEK
      '463495955', // RENKLƒ∞ DENƒ∞M G√ñMLEK
      '480186211', // D√ñK√úML√ú RELAXED FIT G√ñMLEK
      '452720308', // STRE√á G√ñMLEK
      '480487932', // √áƒ∞ZGƒ∞Lƒ∞ YAMALI CHAMPION ¬Æ X ZARA G√ñMLEK
      '452730693'  // DOKULU STRE√á G√ñMLEK
    ]

    console.log('\nüîç Error.md\'deki ID\'leri kontrol ediyorum:')
    for (const id of errorLogIds) {
      const product = await prisma.product.findUnique({
        where: { id: id },
        select: { id: true, name: true, slug: true, productCode: true }
      })

      if (product) {
        console.log(`‚úÖ ID ${id} bulundu: ${product.name}`)
      } else {
        console.log(`‚ùå ID ${id} bulunamadƒ±`)
      }
    }

  } catch (error) {
    console.error('‚ùå Hata:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkExistingProducts()
